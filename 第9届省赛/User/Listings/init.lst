C51 COMPILER V9.60.0.0   INIT                                                              03/13/2023 13:40:29 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INIT
OBJECT MODULE PLACED IN .\Objects\init.obj
COMPILER INVOKED BY: E:\keil5\keil5\C51\BIN\C51.EXE ..\Config\init.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\User;..\System;.
                    -.\Driver;..\Config) DEBUG OBJECTEXTEND PRINT(.\Listings\init.lst) OBJECT(.\Objects\init.obj)

line level    source

   1          #include "init.h"
   2          
   3          
   4          
   5          void Delay5ms()         //@12.000MHz
   6          {
   7   1              unsigned char i, j;
   8   1      
   9   1              i = 59;
  10   1              j = 90;
  11   1              do
  12   1              {
  13   2                      while (--j);
  14   2              } while (--i);
  15   1      }
  16          
  17          
  18          void LedTimerRead()
  19          {
  20   1              unsigned char ReadBuf = 0;
  21   1              
  22   1              ReadBuf = EEPROM_Read(0xF8);
  23   1              
  24   1              if(ReadBuf != 78)
  25   1              {
  26   2                      LedTimerDataWrite(1);
  27   2                      LedTimerDataWrite(2);
  28   2                      LedTimerDataWrite(3);
  29   2                      LedTimerDataWrite(4);
  30   2                      EEPROM_Write(0xF8,78);
  31   2              }
  32   1              else
  33   1              {
  34   2                      
  35   2              }
  36   1              LedTimerDataRead();
  37   1      }
  38          
  39          
  40          void LedTimerDataRead()
  41          {
  42   1              unsigned int Timer_Data_Buff = 0;
  43   1              
  44   1              Timer_Data_Buff = EEPROM_Read(0x10);
  45   1              Timer_Data_Buff = Timer_Data_Buff << 8;
  46   1              Timer_Data_Buff = Timer_Data_Buff | EEPROM_Read(0x11);
  47   1              Led_Timer_Buff_Mode[0] = Timer_Data_Buff;
  48   1              Timer_Data_Buff = 0;
  49   1              
  50   1              Timer_Data_Buff = EEPROM_Read(0x20);
  51   1              Timer_Data_Buff = Timer_Data_Buff << 8;
  52   1              Timer_Data_Buff = Timer_Data_Buff | EEPROM_Read(0x21);
  53   1              Led_Timer_Buff_Mode[1] = Timer_Data_Buff;
  54   1              Timer_Data_Buff = 0;
C51 COMPILER V9.60.0.0   INIT                                                              03/13/2023 13:40:29 PAGE 2   

  55   1      
  56   1              Timer_Data_Buff = EEPROM_Read(0x30);
  57   1              Timer_Data_Buff = Timer_Data_Buff << 8;
  58   1              Timer_Data_Buff = Timer_Data_Buff | EEPROM_Read(0x31);
  59   1              Led_Timer_Buff_Mode[2] = Timer_Data_Buff;
  60   1              Timer_Data_Buff = 0;
  61   1      
  62   1              Timer_Data_Buff = EEPROM_Read(0x40);
  63   1              Timer_Data_Buff = Timer_Data_Buff << 8;
  64   1              Timer_Data_Buff = Timer_Data_Buff | EEPROM_Read(0x41);
  65   1              Led_Timer_Buff_Mode[3] = Timer_Data_Buff;
  66   1              Timer_Data_Buff = 0;    
  67   1      }
  68          
  69          void LedTimerDataWrite(unsigned char DataCode)
  70          {
  71   1              unsigned char Data_Buff = 0;
  72   1              switch(DataCode)
  73   1              {
  74   2                      case 1: 
  75   2                              Data_Buff = (unsigned char)(Led_Timer_Buff_Mode[0]>>8);
  76   2                              EEPROM_Write(0x10,Data_Buff);
  77   2                              Delay5ms();
  78   2                              Data_Buff = 0;
  79   2                              Data_Buff = (unsigned char)(Led_Timer_Buff_Mode[0]&0x00FF);
  80   2                              EEPROM_Write(0x11,Data_Buff);
  81   2                              Delay5ms();
  82   2                              break;
  83   2                      case 2: 
  84   2                              Data_Buff = (unsigned char)(Led_Timer_Buff_Mode[1]>>8);
  85   2                              EEPROM_Write(0x20,Data_Buff);
  86   2                              Delay5ms();
  87   2                              Data_Buff = 0;
  88   2                              Data_Buff = (unsigned char)(Led_Timer_Buff_Mode[1]&0x00FF);
  89   2                              EEPROM_Write(0x21,Data_Buff);
  90   2                              Delay5ms();
  91   2                              break;
  92   2                      case 3: 
  93   2                              Data_Buff = (unsigned char)(Led_Timer_Buff_Mode[2]>>8);
  94   2                              EEPROM_Write(0x30,Data_Buff);
  95   2                              Delay5ms();
  96   2                              Data_Buff = 0;
  97   2                              Data_Buff = (unsigned char)(Led_Timer_Buff_Mode[2]&0x00FF);
  98   2                              EEPROM_Write(0x31,Data_Buff);
  99   2                              Delay5ms();
 100   2                              break;
 101   2                      case 4: 
 102   2                              Data_Buff = (unsigned char)(Led_Timer_Buff_Mode[3]>>8);
 103   2                              EEPROM_Write(0x40,Data_Buff);
 104   2                              Delay5ms();
 105   2                              Data_Buff = 0;
 106   2                              Data_Buff = (unsigned char)(Led_Timer_Buff_Mode[3]&0x00FF);
 107   2                              EEPROM_Write(0x41,Data_Buff);
 108   2                              Delay5ms();
 109   2                              break;
 110   2                      default: break;
 111   2              }
 112   1      
 113   1      }
 114          
 115          
 116          
C51 COMPILER V9.60.0.0   INIT                                                              03/13/2023 13:40:29 PAGE 3   

 117          bit LedPwm(unsigned char pwm)
 118          {
 119   1              static unsigned char Pwm_Side = 0;
 120   1              unsigned char Pwm_Buff = 0; 
 121   1              
 122   1              Pwm_Buff = 100 - pwm;
 123   1              
 124   1              if(Pwm_Side < pwm)
 125   1              {
 126   2                      Pwm_Side += Pwm_Buff;
 127   2                      return 1;
 128   2              }
 129   1              else
 130   1              {
 131   2                      Pwm_Side -= pwm;
 132   2                      return 0;
 133   2              }
 134   1      
 135   1      }
 136          
 137          
 138          
 139          void Timer0Init(void)           //1毫秒@12.000MHz
 140          {
 141   1              AUXR |= 0x80;           //定时器时钟1T模式
 142   1              TMOD &= 0xF0;           //设置定时器模式
 143   1              TL0 = 0x20;             //设置定时初始值
 144   1              TH0 = 0xD1;             //设置定时初始值
 145   1              TF0 = 0;                //清除TF0标志
 146   1              TR0 = 1;                //定时器0开始计时
 147   1              ET0 = 1;
 148   1              EA = 1;
 149   1      }
 150          
 151          
 152          void BuzzLedInit()
 153          {       
 154   1              P0 = 0xFF;
 155   1              HC138(4);
 156   1              HC138(7);
 157   1              HC138(0);
 158   1              BUZZ = 0;
 159   1              RELAY = 0;
 160   1              HC138(5);
 161   1              HC138(0);       
 162   1      
 163   1      }
 164          
 165          
 166          
 167          void HC138(unsigned char Y)
 168          {
 169   1              P2 &= 0x1F;
 170   1              P2 |= (Y & 0x07) << 5;
 171   1      }
 172          
 173          
 174          
 175          
 176          
 177          
 178          
C51 COMPILER V9.60.0.0   INIT                                                              03/13/2023 13:40:29 PAGE 4   

 179          
 180          
 181          
 182          
 183          
 184          
 185          
 186          
 187          
 188          
 189          
 190          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    423    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
