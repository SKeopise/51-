C51 COMPILER V9.56.0.0   KEY                                                               04/08/2022 16:36:36 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN .\Objects\Key.obj
COMPILER INVOKED BY: E:\keil5\keil5\C51\BIN\C51.EXE ..\Driver\Key.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\User;..\system;..
                    -\Driver;..\Include) DEBUG OBJECTEXTEND PRINT(.\Listings\Key.lst) TABS(2) OBJECT(.\Objects\Key.obj)

line level    source

   1          #include <Key.h>
   2          
   3          int VP;
   4          unsigned char Vcnt;
   5          
   6            unsigned char key_error_cnt = 0;
   7          
   8          unsigned char code keycode_map[4][4] = {
   9            {0x07,0x11,0x15,0x19},
  10            {0x06,0x10,0x14,0x18},
  11            {0x05,0x09,0x13,0x17},
  12            {0x04,0x08,0x12,0x16}
  13          };
  14          
  15          unsigned char Key_Sta[4][4] = {
  16              {1,1,1,1},{1,1,1,1},{1,1,1,1},{1,1,1,1}
  17          };
  18          
  19          unsigned char key_mod = 0;
  20          
  21          
  22          
  23          void KeyAction_01(unsigned char keycode)
  24          {
  25   1        if(keycode == 0x12)
  26   1        {
  27   2          key_mod++;
  28   2            if(key_mod == 2)
  29   2            {
  30   3              Write_EEPROM(0x00,VP/10);   
  31   3            }
  32   2            if(key_mod >= 3)
  33   2            {
  34   3              key_mod = 0;
  35   3            }
  36   2          key_error_cnt = 0;
  37   2        }
  38   1        else if(keycode == 0x13)
  39   1        {
  40   2          if(key_mod == 2)
  41   2          {
  42   3            Vcnt = 0;
  43   3            key_error_cnt = 0;
  44   3          } 
  45   2          else
  46   2          {
  47   3            key_error_cnt++;
  48   3          }
  49   2        }
  50   1        else if(keycode == 0x16)
  51   1        {
  52   2          if(key_mod == 1)
  53   2          {
  54   3            key_error_cnt = 0;
C51 COMPILER V9.56.0.0   KEY                                                               04/08/2022 16:36:36 PAGE 2   

  55   3            VP += 50;
  56   3            if(VP > 500)
  57   3            {
  58   4              VP = 0;
  59   4            }
  60   3          }
  61   2          else
  62   2          {
  63   3            key_error_cnt++;
  64   3          }
  65   2        }
  66   1        else if(keycode == 0x17)
  67   1        {
  68   2          if(key_mod == 1)
  69   2          {
  70   3            key_error_cnt = 0;
  71   3            VP -= 50;
  72   3            if(VP < 0)
  73   3            {
  74   4              VP = 500;
  75   4            }
  76   3          }
  77   2          else
  78   2          {
  79   3            key_error_cnt++;
  80   3          }
  81   2        }
  82   1        else
  83   1        {
  84   2          key_error_cnt++;  
  85   2        }
  86   1        
  87   1      }
  88          
  89          
  90          
  91          
  92          
  93          
  94          void Key_Driver()
  95          {
  96   1        static unsigned char i,j;
  97   1        static unsigned char backup[4][4] = {
  98   1          {1,1,1,1},{1,1,1,1},{1,1,1,1},{1,1,1,1}
  99   1        };
 100   1        
 101   1        for(i=0;i<4;i++)
 102   1        {
 103   2          for(j=0;j<4;j++)
 104   2          {
 105   3            if(backup[i][j] != Key_Sta[i][j])
 106   3            {
 107   4              if(backup[i][j] != 0)
 108   4              {
 109   5      
 110   5                  KeyAction_01(keycode_map[i][j]);
 111   5      
 112   5              }
 113   4              backup[i][j] = Key_Sta[i][j];
 114   4            }
 115   3          }
 116   2        }  
C51 COMPILER V9.56.0.0   KEY                                                               04/08/2022 16:36:36 PAGE 3   

 117   1        
 118   1      
 119   1      }
 120          
 121          
 122          void Key_Scan()
 123          {
 124   1        unsigned char i;
 125   1        static unsigned char keyout = 0;
 126   1        static unsigned char keybuf[4][4] = {
 127   1          {0xFF,0xFF,0xFF,0xFF},{0xFF,0xFF,0xFF,0xFF},
 128   1          {0xFF,0xFF,0xFF,0xFF},{0xFF,0xFF,0xFF,0xFF}
 129   1        };
 130   1        
 131   1        keybuf[keyout][0] = (keybuf[keyout][0]<<1) | KEY_IN_1;
 132   1        keybuf[keyout][1] = (keybuf[keyout][1]<<1) | KEY_IN_2;
 133   1        keybuf[keyout][2] = (keybuf[keyout][2]<<1) | KEY_IN_3;
 134   1        keybuf[keyout][3] = (keybuf[keyout][3]<<1) | KEY_IN_4;
 135   1        
 136   1        for(i=0;i<4;i++)
 137   1        {
 138   2          if((keybuf[keyout][i] & 0x0F) == 0x00)
 139   2          {
 140   3            Key_Sta[keyout][i] = 0;
 141   3          }
 142   2          else if((keybuf[keyout][i] & 0x0F) == 0x0F)
 143   2          {
 144   3            Key_Sta[keyout][i] = 1;
 145   3          }
 146   2        }
 147   1        
 148   1        keyout++;
 149   1        keyout = keyout & 0x03;
 150   1        switch(keyout)
 151   1        {
 152   2          case 0:KEY_OUT_4 = 1; KEY_OUT_1 = 0;break;
 153   2          case 1:KEY_OUT_1 = 1; KEY_OUT_2 = 0;break;
 154   2          case 2:KEY_OUT_2 = 1; KEY_OUT_3 = 0;break;
 155   2          case 3:KEY_OUT_3 = 1; KEY_OUT_4 = 0;break;
 156   2          default:break;
 157   2        }
 158   1      }
 159          
 160          
 161          
 162          
 163          
 164          
 165          
 166          
 167          
 168          
 169          
 170          
 171          
 172          
 173          
 174          
 175          
 176          
 177          
 178          
C51 COMPILER V9.56.0.0   KEY                                                               04/08/2022 16:36:36 PAGE 4   

 179          
 180          
 181          
 182          
 183          
 184          
 185          
 186          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    483    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     56       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
