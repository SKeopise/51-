C51 COMPILER V9.56.0.0   LED                                                               04/15/2022 17:18:19 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE LED
OBJECT MODULE PLACED IN .\Objects\led.obj
COMPILER INVOKED BY: E:\keil5\keil5\C51\BIN\C51.EXE ..\Driver\led.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Driver;..\Include
                    -;..\System;..\User) DEBUG OBJECTEXTEND PRINT(.\Listings\led.lst) OBJECT(.\Objects\led.obj)

line level    source

   1          #include <led.h>
   2          
   3          
   4          
   5          unsigned char code LedChar[] = {
   6                  0xC0,0xF9,0xA4,0xB0,0x99,0X92,0x82,0xF8,0x80,0X90       
   7          };
   8          
   9          unsigned char LedBuff[] = {
  10                  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
  11          };
  12          
  13          
  14          //void Led_Display(unsigned char pos,unsigned char dat)
  15          //{
  16          //      P0 = 0xFF;
  17          //      HC138(6);
  18          //      P0 = 0x01 << pos;
  19          //      HC138(7);
  20          //      P0 = dat;
  21          //  HC138(0);
  22          //      delay(300);
  23          //}
  24          
  25          void Led_interrupt()
  26          {
  27   1              static unsigned char i=0;
  28   1              
  29   1              P0 = 0xFF;
  30   1              HC138(6);
  31   1              P0 = 0x01 << i;
  32   1              HC138(7);
  33   1              P0 = LedBuff[i];
  34   1        HC138(0);
  35   1              
  36   1              i++;
  37   1              if(i>7)
  38   1              {
  39   2                      i=0;
  40   2              }
  41   1      }
  42          
  43          
  44          //void Led_DS18B20()
  45          //{
  46          //      static unsigned char i=0;
  47          //      
  48          //      switch(i)
  49          //      {
  50          //              case 0: Led_Display(7,LedChar[temp%10]); i++; break;
  51          //              case 1: Led_Display(6,LedChar[(temp%100)/10]); i++; break;
  52          //              case 2: Led_Display(5,LedChar[temp/100]); i++; break;
  53          //              
  54          //              case 3: Led_Display(1,LedChar[1]); i++; break;
C51 COMPILER V9.56.0.0   LED                                                               04/15/2022 17:18:19 PAGE 2   

  55          //              case 4: Led_Display(0,~0x3E); i=0; break;
  56          //              default: break;
  57          //      }
  58          //}
  59          
  60          void Led_18B20Buff()
  61          {
  62   1              if(workmod == 0)
  63   1              {
  64   2                      LedBuff[7] = LedChar[temp%10];
  65   2                      LedBuff[6] = LedChar[(temp%100)/10] & ~0x80;
  66   2                      LedBuff[5] = LedChar[temp/100];
  67   2                      LedBuff[4] = 0xFF;
  68   2                      LedBuff[3] = 0xFF;
  69   2                      LedBuff[2] = 0xFF;
  70   2      
  71   2                      LedBuff[1] = LedChar[1];
  72   2                      LedBuff[0] = ~0x3E;     
  73   2              }
  74   1      }
  75          
  76          
  77          void Led_DS1302Buff()
  78          {
  79   1              if(workmod == 1)
  80   1              {
  81   2                      LedBuff[7] = LedChar[Timer[0]%16];
  82   2                      LedBuff[6] = LedChar[Timer[0]/16];
  83   2                      LedBuff[5] = ~0x40;
  84   2                      LedBuff[4] = LedChar[Timer[1]%16];
  85   2                      LedBuff[3] = LedChar[Timer[1]/16];
  86   2                      LedBuff[2] = 0xFF;
  87   2      
  88   2                      LedBuff[1] = LedChar[2];
  89   2                      LedBuff[0] = ~0x3E;     
  90   2              }
  91   1      }
  92          
  93          
  94          
  95          
  96          
  97          
  98          
  99          
 100          
 101          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    224    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
