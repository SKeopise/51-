C51 COMPILER V9.60.0.0   KEY                                                               03/04/2023 17:16:16 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN .\Objects\key.obj
COMPILER INVOKED BY: E:\keil5\keil5\C51\BIN\C51.EXE ..\Driver\key.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\User;..\System;..
                    -\Driver;..\Config) DEBUG OBJECTEXTEND PRINT(.\Listings\key.lst) OBJECT(.\Objects\key.obj)

line level    source

   1          #include "key.h"
   2          #include "led.h"
   3          
   4          
   5          unsigned char code Key_Map[4][4] = {        //按键扫描键码表
   6                  {'1','2','3','A'},
   7                  {'4','5','6','B'},
   8                  {'7','8','9','C'},
   9                  {'*','0','#','D'}
  10          };
  11          
  12          unsigned char Key_Sta[4][4] = {                //按键状态
  13                  {1,1,1,1},{1,1,1,1},{1,1,1,1},{1,1,1,1},
  14          };
  15          
  16          extern unsigned int keyflag;
  17          
  18          
  19          void Key_Action_bkp1(unsigned char keycode)   //当按键按下时执行动作
  20          {
  21   1              if(keycode == '#')
  22   1              {
  23   2                      keyflag++;
  24   2                      if(keyflag >= 3)
  25   2                      {
  26   3                              keyflag = 0;
  27   3                      }
  28   2              }
  29   1              else if(keycode == '9')
  30   1              {
  31   2                      if(workmode == 0)
  32   2                      {
  33   3                              Relay(0);
  34   3                              workmode = 1;
  35   3                      }
  36   2                      else
  37   2                      {
  38   3                              workmode = 0;
  39   3                      }
  40   2              }
  41   1              else if(keycode == 'D')
  42   1              {
  43   2                      if(keyflag == 2)
  44   2                      {
  45   3                              Tparm++;
  46   3                      }
  47   2              }
  48   1              else if(keycode == 'C')
  49   1              {
  50   2                      if(keyflag == 2)
  51   2                      {
  52   3                              Tparm--;
  53   3                      }
  54   2                      else if(keyflag == 1)
C51 COMPILER V9.60.0.0   KEY                                                               03/04/2023 17:16:16 PAGE 2   

  55   2                      {
  56   3                              TimeMod = 1;
  57   3                      }
  58   2                      
  59   2              }
  60   1              
  61   1      }
  62          
  63          void Key_Action_bkp2(unsigned char keycode)     //当按键抬起时执行动作
  64          {
  65   1              if(keycode == 'C')
  66   1              {
  67   2                      if(keyflag == 1)
  68   2                      {
  69   3                              TimeMod = 0;
  70   3                      }
  71   2                      
  72   2              }       
  73   1      }
  74          
  75          
  76          void Key_Driver()                    
  77          {
  78   1              static unsigned char i,j;
  79   1              static unsigned char backup[4][4] = {          //前一次按键状态的缓存
  80   1                      {1,1,1,1},{1,1,1,1},{1,1,1,1},{1,1,1,1},
  81   1              };
  82   1              
  83   1              for(i = 0;i < 4;i++)
  84   1              {
  85   2                      for(j = 0;j < 4;j++)
  86   2                      {
  87   3                              if(backup[i][j] != Key_Sta[i][j])
  88   3                              {       //如果按键状态与之前缓存区不同，则说明发生了动作
  89   4                                      if(backup[i][j] != 0)
  90   4                                      {       //按键按下执行
  91   5                                              Key_Action_bkp1(Key_Map[i][j]);
  92   5                                      }
  93   4                                      else
  94   4                                      {       //按键松开执行
  95   5                                              Key_Action_bkp2(Key_Map[i][j]);
  96   5                                      }
  97   4                                      backup[i][j] = Key_Sta[i][j];
  98   4                              }
  99   3                      }
 100   2              }
 101   1      
 102   1      }
 103          
 104          void Key_Scan()
 105          {
 106   1              unsigned char i;
 107   1              static unsigned char keyout = 0;
 108   1              static unsigned char Key_Buf[4][4] = {
 109   1                      {0xFF,0xFF,0xFF,0xFF},{0xFF,0xFF,0xFF,0xFF},
 110   1                      {0xFF,0xFF,0xFF,0xFF},{0xFF,0xFF,0xFF,0xFF},
 111   1              }; 
 112   1              
 113   1              Key_Buf[keyout][0] = (Key_Buf[keyout][0] << 1) | KEY_IN_0;
 114   1              Key_Buf[keyout][1] = (Key_Buf[keyout][1] << 1) | KEY_IN_1;
 115   1              Key_Buf[keyout][2] = (Key_Buf[keyout][2] << 1) | KEY_IN_2;
 116   1              Key_Buf[keyout][3] = (Key_Buf[keyout][3] << 1) | KEY_IN_3;
C51 COMPILER V9.60.0.0   KEY                                                               03/04/2023 17:16:16 PAGE 3   

 117   1              
 118   1              for(i=0;i<4;i++)
 119   1              {
 120   2                      if((Key_Buf[keyout][i] & 0x0F) == 0x00)
 121   2                      {
 122   3                              Key_Sta[keyout][i] = 0;
 123   3                      }
 124   2                      else if((Key_Buf[keyout][i] & 0x0F) == 0x0F)
 125   2                      {
 126   3                              Key_Sta[keyout][i] = 1;
 127   3                      }
 128   2              }
 129   1              
 130   1              keyout++;
 131   1              keyout = keyout & 0x03;
 132   1              switch(keyout)
 133   1              {
 134   2                      case 0: KEY_OUT_3 = 1; KEY_OUT_0 = 0;break;
 135   2                      case 1: KEY_OUT_0 = 1; KEY_OUT_1 = 0;break;
 136   2                      case 2: KEY_OUT_1 = 1; KEY_OUT_2 = 0;break;
 137   2                      case 3: KEY_OUT_2 = 1; KEY_OUT_3 = 0;break;
 138   2                      default: break;
 139   2              }
 140   1              
 141   1              
 142   1      }
 143          
 144          
 145          
 146          
 147          
 148          
 149          
 150          
 151          
 152          
 153          
 154          
 155          
 156          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    500    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     51       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
