C51 COMPILER V9.60.0.0   LED                                                               03/29/2023 11:01:15 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LED
OBJECT MODULE PLACED IN .\Objects\led.obj
COMPILER INVOKED BY: E:\keil5\keil5\C51\BIN\C51.EXE ..\Driver\led.c OPTIMIZE(9,SPEED) BROWSE INCDIR(..\User;..\System;..
                    -\Driver;..\Config) DEBUG OBJECTEXTEND PRINT(.\Listings\led.lst) OBJECT(.\Objects\led.obj)

line level    source

   1          
   2          #include "led.h"
   3          
   4          //数码管真值表
   5          unsigned char code Led_Number[] =
   6          {
   7                  0xc0, //0
   8                  0xf9, //1
   9                  0xa4, //2
  10                  0xb0, //3
  11                  0x99, //4
  12                  0x92, //5
  13                  0x82, //6
  14                  0xf8, //7
  15                  0x80, //8
  16                  0x90, //9
  17                  0xFF
  18          };
  19          
  20          unsigned char Led_Buff[] = {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF};
  21          
  22          
  23          
  24          bit flag_1s = 0;
  25          
  26          bit flag_200ms = 0;
  27          unsigned char flag_5s = 0;
  28          
  29          //LED指示灯显示，如果Flag_Warring_Clock为1，则LED1以0.2秒为间隔闪烁，持续5秒钟
  30          void LedShow()
  31          {
  32   1              P0 = 0xFF;
  33   1              if(Flag_Warring_Clock == 1)
  34   1              {
  35   2                      if(flag_5s < 50)
  36   2                      {
  37   3                              if(flag_200ms == 0)
  38   3                              {
  39   4                                      LED1 = 0;
  40   4                              }
  41   3                              else
  42   3                              {
  43   4                                      LED1 = 1;
  44   4                              }
  45   3                      }
  46   2                      else
  47   2                      {
  48   3                              flag_5s = 0;
  49   3                              Flag_Warring_Clock = 0;
  50   3                      }
  51   2              }
  52   1              HC138Set(4);
  53   1              HC138Set(0);
  54   1      }
C51 COMPILER V9.60.0.0   LED                                                               03/29/2023 11:01:15 PAGE 2   

  55          
  56          
  57          void SmgShow()
  58          {
  59   1              if((Temp_Show == 1)&&(Clock_Warring_Time_Set == 0)&&(Clock_Data_Set == 0))
  60   1              {
  61   2                      SmgShowTemp();
  62   2              }
  63   1              else if(Clock_Warring_Time_Set != 0)
  64   1              {
  65   2                      SmgShowTimeWarring();
  66   2              }
  67   1              else
  68   1              {
  69   2                      SmgShowTime();
  70   2              }
  71   1      }
  72          
  73          void SmgShowTimeWarring()
  74          {
  75   1              if(Clock_Warring_Time_Set == 1)
  76   1              {
  77   2                      if(flag_1s == 0)
  78   2                      {
  79   3                              Led_Buff[0] = Led_Number[(Timer_Warring[2]/10)%10];
  80   3                              Led_Buff[1] = Led_Number[Timer_Warring[2]%10];
  81   3                      }
  82   2                      else
  83   2                      {
  84   3                              Led_Buff[0] = Led_Number[10];
  85   3                              Led_Buff[1] = Led_Number[10];                   
  86   3                      }
  87   2              }
  88   1              else
  89   1              {
  90   2                      Led_Buff[0] = Led_Number[(Timer_Warring[2]/10)%10];
  91   2                      Led_Buff[1] = Led_Number[Timer_Warring[2]%10];          
  92   2              }
  93   1              
  94   1              Led_Buff[2] = 0xBF;
  95   1              
  96   1              if(Clock_Warring_Time_Set == 2)
  97   1              {
  98   2                      if(flag_1s == 0)
  99   2                      {
 100   3                              Led_Buff[3] = Led_Number[(Timer_Warring[1]/10)%10];
 101   3                              Led_Buff[4] = Led_Number[Timer_Warring[1]%10];
 102   3                      }
 103   2                      else
 104   2                      {
 105   3                              Led_Buff[3] = Led_Number[10];
 106   3                              Led_Buff[4] = Led_Number[10];                   
 107   3                      }
 108   2              }
 109   1              else
 110   1              {
 111   2                      Led_Buff[3] = Led_Number[(Timer_Warring[1]/10)%10];
 112   2                      Led_Buff[4] = Led_Number[Timer_Warring[1]%10];          
 113   2              }
 114   1              
 115   1              Led_Buff[5] = 0xBF;
 116   1              
C51 COMPILER V9.60.0.0   LED                                                               03/29/2023 11:01:15 PAGE 3   

 117   1              if(Clock_Warring_Time_Set == 3)
 118   1              {
 119   2                      if(flag_1s == 0)
 120   2                      {
 121   3                              Led_Buff[6] = Led_Number[(Timer_Warring[0]/10)%10];
 122   3                              Led_Buff[7] = Led_Number[Timer_Warring[0]%10];
 123   3                      }
 124   2                      else
 125   2                      {
 126   3                              Led_Buff[6] = Led_Number[10];
 127   3                              Led_Buff[7] = Led_Number[10];                   
 128   3                      }
 129   2              }
 130   1              else
 131   1              {
 132   2                      Led_Buff[6] = Led_Number[(Timer_Warring[0]/10)%10];
 133   2                      Led_Buff[7] = Led_Number[Timer_Warring[0]%10];  
 134   2              }       
 135   1      }
 136          
 137          void SmgShowTemp()
 138          {
 139   1              Led_Buff[0] = Led_Number[10];
 140   1              Led_Buff[1] = Led_Number[10];
 141   1              Led_Buff[2] = Led_Number[10];
 142   1              Led_Buff[3] = Led_Number[10];
 143   1              Led_Buff[4] = Led_Number[10];
 144   1      
 145   1              Led_Buff[5] = Led_Number[(Temp_Data/10)%10];
 146   1              Led_Buff[6] = Led_Number[Temp_Data%10];
 147   1              Led_Buff[7] = 0xC6;     
 148   1      }
 149          
 150          void SmgShowTime()
 151          {
 152   1              if(Clock_Data_Set == 1)
 153   1              {
 154   2                      if(flag_1s == 0)
 155   2                      {
 156   3                              Led_Buff[0] = Led_Number[TimerData[2]>>4];
 157   3                              Led_Buff[1] = Led_Number[TimerData[2]&0x0F];
 158   3                      }
 159   2                      else
 160   2                      {
 161   3                              Led_Buff[0] = Led_Number[10];
 162   3                              Led_Buff[1] = Led_Number[10];                   
 163   3                      }
 164   2              }
 165   1              else
 166   1              {
 167   2                      Led_Buff[0] = Led_Number[TimerData[2]>>4];
 168   2                      Led_Buff[1] = Led_Number[TimerData[2]&0x0F];
 169   2              }
 170   1              
 171   1              Led_Buff[2] = 0xBF;
 172   1              
 173   1              if(Clock_Data_Set == 2)
 174   1              {
 175   2                      if(flag_1s == 0)
 176   2                      {
 177   3                              Led_Buff[3] = Led_Number[TimerData[1]>>4];
 178   3                              Led_Buff[4] = Led_Number[TimerData[1]&0x0F];
C51 COMPILER V9.60.0.0   LED                                                               03/29/2023 11:01:15 PAGE 4   

 179   3                      }
 180   2                      else
 181   2                      {
 182   3                              Led_Buff[3] = Led_Number[10];
 183   3                              Led_Buff[4] = Led_Number[10];                   
 184   3                      }
 185   2              }
 186   1              else
 187   1              {
 188   2                      Led_Buff[3] = Led_Number[TimerData[1]>>4];
 189   2                      Led_Buff[4] = Led_Number[TimerData[1]&0x0F];    
 190   2              }
 191   1              
 192   1              Led_Buff[5] = 0xBF;
 193   1              
 194   1              if(Clock_Data_Set == 3)
 195   1              {
 196   2                      if(flag_1s == 0)
 197   2                      {
 198   3                              Led_Buff[6] = Led_Number[TimerData[0]>>4];
 199   3                              Led_Buff[7] = Led_Number[TimerData[0]&0x0F];
 200   3                      }
 201   2                      else
 202   2                      {
 203   3                              Led_Buff[6] = Led_Number[10];
 204   3                              Led_Buff[7] = Led_Number[10];                   
 205   3                      }
 206   2              }
 207   1              else
 208   1              {
 209   2                      Led_Buff[6] = Led_Number[TimerData[0]>>4];
 210   2                      Led_Buff[7] = Led_Number[TimerData[0]&0x0F];    
 211   2              }
 212   1      }
 213          
 214          
 215          void SmgDisplay()
 216          {
 217   1              static unsigned char i = 0;
 218   1              
 219   1              P0 = 0x00;
 220   1              HC138Set(6);
 221   1              P0 = 0x01 << i;
 222   1              HC138Set(0);
 223   1              
 224   1              P0 = 0xFF;
 225   1              HC138Set(7);
 226   1              P0 = Led_Buff[i];
 227   1              HC138Set(0);
 228   1              
 229   1              i++;
 230   1              if(i>7)
 231   1              {
 232   2                      i = 0;
 233   2              }
 234   1      }
 235          
 236          
 237          
 238          
 239          
 240          
C51 COMPILER V9.60.0.0   LED                                                               03/29/2023 11:01:15 PAGE 5   

 241          
 242          
 243          
 244          
 245          
 246          
 247          
 248          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    454    ----
   CONSTANT SIZE    =     11    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
