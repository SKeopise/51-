C51 COMPILER V9.60.0.0   LED                                                               06/07/2023 21:56:33 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LED
OBJECT MODULE PLACED IN .\Objects\led.obj
COMPILER INVOKED BY: E:\keil5\keil5\C51\BIN\C51.EXE Driver\led.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\User;.\Driver;.\Syste
                    -m;.\Config) DEBUG OBJECTEXTEND PRINT(.\Listings\led.lst) OBJECT(.\Objects\led.obj)

line level    source

   1          #include "led.h"
   2          
   3          
   4          
   5          
   6          code unsigned char Led_Number[] =
   7          {
   8                  0xc0, //0
   9                  0xf9, //1
  10                  0xa4, //2
  11                  0xb0, //3
  12                  0x99, //4
  13                  0x92, //5
  14                  0x82, //6
  15                  0xf8, //7
  16                  0x80, //8
  17                  0x90, //9
  18                  0xFF
  19          };
  20          
  21          
  22          
  23          unsigned char Led_Buff[8] = {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF};
  24          
  25          unsigned char Led_FlashCnt = 0;
  26          
  27          bit flag_Led1 = 0;
  28          bit flag_LedFlash = 1;
  29          
  30          
  31          void LedDisplay()
  32          {
  33   1              static unsigned char Led_Cnt = 0;
  34   1              
  35   1              if(flag_Led1 == 1)
  36   1              {
  37   2                      Led_Cnt++;
  38   2                      if(Led_Cnt >= 200)
  39   2                      {
  40   3                              Led_Cnt = 0;
  41   3                              flag_LedFlash = ~flag_LedFlash;
  42   3                              Led_FlashCnt++;
  43   3                              if(Led_FlashCnt >= 20)
  44   3                              {
  45   4                                      Led_FlashCnt = 0;
  46   4                                      flag_Led1 = 0;
  47   4                                      flag_LedFlash = 1;
  48   4                              }                       
  49   3                      }
  50   2              }       
  51   1              
  52   1              P0 = 0xFF;      
  53   1              if(flag_Led1 == 1)
  54   1              {
C51 COMPILER V9.60.0.0   LED                                                               06/07/2023 21:56:33 PAGE 2   

  55   2                      LED1 = flag_LedFlash;
  56   2              }
  57   1              
  58   1              if(Menu_Mode == 1)
  59   1              {
  60   2                      LED8 = 0;
  61   2              }
  62   1              else if(Menu_Mode == 2)
  63   1              {
  64   2                      LED7 = 0;
  65   2              }
  66   1              
  67   1              HC138Set(4);
  68   1              HC138Set(0);
  69   1      }
  70          
  71          void SmgMenuMain()
  72          {
  73   1              if(Menu_Mode == 0)
  74   1              {
  75   2                      SmgMenuDistence();
  76   2              }
  77   1              else if(Menu_Mode == 1)
  78   1              {
  79   2                      SmgMenuBackup();
  80   2              }
  81   1              else
  82   1              {
  83   2                      SmgMenuParm();
  84   2              }
  85   1              
  86   1      }
  87          
  88          void SmgMenuParm()
  89          {
  90   1              Led_Buff[0] = 0x8E;     
  91   1              Led_Buff[1] = Led_Number[10];
  92   1              Led_Buff[2] = Led_Number[10];   
  93   1              Led_Buff[3] = Led_Number[10];
  94   1              Led_Buff[4] = Led_Number[10];
  95   1              
  96   1              if(Parm_Distence_Buf >= 100)
  97   1              {
  98   2                      Led_Buff[5] = Led_Number[(Parm_Distence_Buf/100)%10];
  99   2              }
 100   1              else
 101   1              {
 102   2                      Led_Buff[5] = Led_Number[10];
 103   2              }
 104   1              if(Parm_Distence_Buf >= 10)
 105   1              {
 106   2                      Led_Buff[6] = Led_Number[(Parm_Distence_Buf/10)%10];
 107   2              }
 108   1              else
 109   1              {
 110   2                      Led_Buff[6] = Led_Number[10];
 111   2              }
 112   1              Led_Buff[7] = Led_Number[(Parm_Distence_Buf)%10];                       
 113   1      }
 114          
 115          void SmgMenuBackup()
 116          {
C51 COMPILER V9.60.0.0   LED                                                               06/07/2023 21:56:33 PAGE 3   

 117   1              Led_Buff[0] = Led_Number[(DataBackup_Cnt/10)%10];
 118   1              Led_Buff[1] = Led_Number[(DataBackup_Cnt)%10];  
 119   1              Led_Buff[2] = Led_Number[10];   
 120   1              Led_Buff[3] = Led_Number[10];
 121   1              Led_Buff[4] = Led_Number[10];
 122   1      
 123   1              if(Sonic_HistoryData[DataBackup_Cnt-1] >= 100)
 124   1              {
 125   2                      Led_Buff[5] = Led_Number[(Sonic_HistoryData[DataBackup_Cnt-1]/100)%10];
 126   2              }
 127   1              else
 128   1              {
 129   2                      Led_Buff[5] = Led_Number[10];
 130   2              }
 131   1              if(Sonic_HistoryData[DataBackup_Cnt-1] >= 10)
 132   1              {
 133   2                      Led_Buff[6] = Led_Number[(Sonic_HistoryData[DataBackup_Cnt-1]/10)%10];
 134   2              }
 135   1              else
 136   1              {
 137   2                      Led_Buff[6] = Led_Number[10];
 138   2              }
 139   1              Led_Buff[7] = Led_Number[(Sonic_HistoryData[DataBackup_Cnt-1])%10];
 140   1      }
 141          
 142          void SmgMenuDistence()
 143          {
 144   1              Led_Buff[1] = Led_Number[10];
 145   1              
 146   1              if(flag_DataShowMode == 0)
 147   1              {
 148   2                      Led_Buff[0] = Led_Number[0];
 149   2                      
 150   2                      if(Distence_Cnt >= 2)
 151   2                      {
 152   3                              if(Sonic_HistoryData[Distence_Cnt - 2] >= 100)
 153   3                              {
 154   4                                      Led_Buff[2] = Led_Number[(Sonic_HistoryData[Distence_Cnt - 2]/100)%10];
 155   4                              }
 156   3                              else
 157   3                              {
 158   4                                      Led_Buff[2] = Led_Number[10];
 159   4                              }
 160   3                              if(Sonic_HistoryData[Distence_Cnt - 2] >= 10)
 161   3                              {
 162   4                                      Led_Buff[3] = Led_Number[(Sonic_HistoryData[Distence_Cnt - 2]/10)%10];
 163   4                              }
 164   3                              else
 165   3                              {
 166   4                                      Led_Buff[3] = Led_Number[10];
 167   4                              }
 168   3                              Led_Buff[4] = Led_Number[(Sonic_HistoryData[Distence_Cnt - 2])%10];
 169   3                      }
 170   2                      else
 171   2                      {
 172   3                              if(Sonic_HistoryData[8 + Distence_Cnt] >= 100)
 173   3                              {
 174   4                                      Led_Buff[2] = Led_Number[(Sonic_HistoryData[8 + Distence_Cnt]/100)%10];
 175   4                              }
 176   3                              else
 177   3                              {
 178   4                                      Led_Buff[2] = Led_Number[10];
C51 COMPILER V9.60.0.0   LED                                                               06/07/2023 21:56:33 PAGE 4   

 179   4                              }
 180   3                              if(Sonic_HistoryData[8 + Distence_Cnt] >= 10)
 181   3                              {
 182   4                                      Led_Buff[3] = Led_Number[(Sonic_HistoryData[8 + Distence_Cnt]/10)%10];
 183   4                              }       
 184   3                              else
 185   3                              {
 186   4                                      Led_Buff[3] = Led_Number[10];
 187   4                              }
 188   3                              Led_Buff[4] = Led_Number[(Sonic_HistoryData[8 + Distence_Cnt])%10];                     
 189   3                      }
 190   2              }
 191   1              else
 192   1              {
 193   2                      Led_Buff[0] = Led_Number[1];
 194   2      
 195   2                      if(Distence_LastIncNow >= 100)
 196   2                      {
 197   3                              Led_Buff[2] = Led_Number[(Distence_LastIncNow/100)%10];
 198   3                      }
 199   2                      else
 200   2                      {
 201   3                              Led_Buff[2] = Led_Number[10];
 202   3                      }
 203   2                      if(Distence_LastIncNow >= 10)
 204   2                      {
 205   3                              Led_Buff[3] = Led_Number[(Distence_LastIncNow/10)%10];
 206   3                      }
 207   2                      else
 208   2                      {
 209   3                              Led_Buff[3] = Led_Number[10];
 210   3                      }
 211   2                      Led_Buff[4] = Led_Number[(Distence_LastIncNow)%10];             
 212   2              }
 213   1      
 214   1              
 215   1              if(Sonic_Distence >= 100)
 216   1              {
 217   2                      Led_Buff[5] = Led_Number[(Sonic_Distence/100)%10];
 218   2              }
 219   1              else
 220   1              {
 221   2                      Led_Buff[5] = Led_Number[10];
 222   2              }
 223   1              if(Sonic_Distence >= 10)
 224   1              {
 225   2                      Led_Buff[6] = Led_Number[(Sonic_Distence/10)%10];
 226   2              }
 227   1              else
 228   1              {
 229   2                      Led_Buff[6] = Led_Number[10];
 230   2              }
 231   1              Led_Buff[7] = Led_Number[(Sonic_Distence)%10];                          
 232   1      }
 233          
 234          
 235          
 236          void SmgDisplay()
 237          {
 238   1              static unsigned char i = 0;
 239   1              
 240   1              P0 = 0xFF;
C51 COMPILER V9.60.0.0   LED                                                               06/07/2023 21:56:33 PAGE 5   

 241   1              HC138Set(7);
 242   1              HC138Set(0);
 243   1              
 244   1              P0 = 0x01 << i;
 245   1              HC138Set(6);
 246   1              HC138Set(0);    
 247   1              
 248   1              P0 = Led_Buff[i];
 249   1              HC138Set(7);
 250   1              HC138Set(0);    
 251   1              
 252   1              i++;
 253   1              i &= 0x07;
 254   1      }
 255          
 256          
 257          
 258          
 259          
 260          
 261          
 262          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    962    ----
   CONSTANT SIZE    =     11    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
