C51 COMPILER V9.60.0.0   EEPROM                                                            06/07/2023 21:56:33 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE EEPROM
OBJECT MODULE PLACED IN .\Objects\eeprom.obj
COMPILER INVOKED BY: E:\keil5\keil5\C51\BIN\C51.EXE Driver\eeprom.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\User;.\Driver;.\Sy
                    -stem;.\Config) DEBUG OBJECTEXTEND PRINT(.\Listings\eeprom.lst) OBJECT(.\Objects\eeprom.obj)

line level    source

   1          #include "eeprom.h"
   2          
   3          
   4          #define FIRST_ADDR 0xAE
   5          #define FIRST_DATA 0x8C
   6          
   7          
   8          
   9          
  10          
  11          void FirstReadData()
  12          {
  13   1              unsigned char Data_Buf = 0;
  14   1              
  15   1              EEPROM_ReadByte(FIRST_ADDR,&Data_Buf);
  16   1              if(Data_Buf != FIRST_DATA)
  17   1              {
  18   2                      EEPROM_WriteByte(FIRST_ADDR,FIRST_DATA);
  19   2      
  20   2                      ClearEEPROM();
  21   2                      ReadHistoryData();
  22   2              }
  23   1              else
  24   1              {
  25   2                      ReadHistoryData();
  26   2                      EEPROM_ReadByte(DISTENCE_CNT_ADDR,&Distence_Cnt);
  27   2                      EEPROM_ReadByte(PARM_ADDR,&Parm_Distence);
  28   2                      
  29   2                      EEPROM_ReadInt((SONIC_DATA_ADDR+(Distence_Cnt-1)*0x02),(SONIC_DATA_ADDR+(Distence_Cnt-1)*0x02+0x01),&Son
             -ic_Distence);
  30   2                      
  31   2                      if(Distence_Cnt > 1)
  32   2                      {
  33   3                              Distence_LastIncNow = Sonic_Distence + Sonic_HistoryData[Distence_Cnt - 2];
  34   3                      }
  35   2                      else
  36   2                      {
  37   3                              Distence_LastIncNow = Sonic_Distence + Sonic_HistoryData[8 + Distence_Cnt];
  38   3                      }               
  39   2              }
  40   1      }
  41          
  42          
  43          
  44          
  45          
  46          
  47          void Delay5ms()         //@12.000MHz
  48          {
  49   1              unsigned char i, j;
  50   1      
  51   1              i = 59;
  52   1              j = 90;
  53   1              do
C51 COMPILER V9.60.0.0   EEPROM                                                            06/07/2023 21:56:33 PAGE 2   

  54   1              {
  55   2                      while (--j);
  56   2              } while (--i);
  57   1      }
  58          
  59          
  60          void ClearEEPROM()
  61          {
  62   1              unsigned char i = 0;
  63   1              unsigned char Addr_Buf = SONIC_DATA_ADDR;
  64   1              
  65   1              for(i=0;i<10;i++)
  66   1              {
  67   2                      EEPROM_WriteInt(Addr_Buf,Addr_Buf+0x01,&Sonic_HistoryData[i]);
  68   2                      Addr_Buf += 0x02;
  69   2              }
  70   1      }
  71          
  72          
  73          void ReadHistoryData()
  74          {
  75   1              unsigned char i = 0;
  76   1              unsigned char Addr_Buf = SONIC_DATA_ADDR;
  77   1              
  78   1              for(i=0;i<10;i++)
  79   1              {
  80   2                      EEPROM_ReadInt(Addr_Buf,Addr_Buf+0x01,&Sonic_HistoryData[i]);
  81   2                      Addr_Buf += 0x02;
  82   2              }       
  83   1      }
  84          
  85          
  86          void EEPROM_WriteInt(unsigned char addrH,unsigned char addrL,unsigned int *dat)
  87          {
  88   1              unsigned char Data_Buf;
  89   1              
  90   1              Data_Buf = (unsigned char)(*dat >> 8);
  91   1              EEPROM_WriteByte(addrH,Data_Buf);
  92   1              Data_Buf = (unsigned char)(*dat & 0x00FF);
  93   1              EEPROM_WriteByte(addrL,Data_Buf);       
  94   1      }
  95          
  96          void EEPROM_ReadInt(unsigned char addrH,unsigned char addrL,unsigned int *dat)
  97          {
  98   1              unsigned char Data_Buf_High;
  99   1              unsigned char Data_Buf_Low;
 100   1              
 101   1              EEPROM_ReadByte(addrH,&Data_Buf_High);
 102   1              EEPROM_ReadByte(addrL,&Data_Buf_Low);
 103   1              *dat = Data_Buf_High;
 104   1              *dat = (*dat << 8) | Data_Buf_Low;
 105   1      }
 106          
 107          
 108          void EEPROM_WriteByte(unsigned char addr,unsigned char dat)
 109          {
 110   1              I2CStart();
 111   1              I2CSendByte(0xA0);
 112   1              I2CWaitAck();
 113   1              I2CSendByte(addr);
 114   1              I2CWaitAck();   
 115   1              I2CSendByte(dat);
C51 COMPILER V9.60.0.0   EEPROM                                                            06/07/2023 21:56:33 PAGE 3   

 116   1              I2CWaitAck();   
 117   1              I2CStop();
 118   1      
 119   1              Delay5ms();     
 120   1      }
 121          
 122          
 123          void EEPROM_ReadByte(unsigned char addr,unsigned char *dat)
 124          {
 125   1              I2CStart();
 126   1              I2CSendByte(0xA0);
 127   1              I2CWaitAck();
 128   1              I2CSendByte(addr);
 129   1              I2CWaitAck();   
 130   1              
 131   1              I2CStart();
 132   1              I2CSendByte(0xA1);
 133   1              I2CWaitAck();   
 134   1              
 135   1              *dat = I2CReceiveByte();
 136   1              I2CSendAck(1);
 137   1              I2CStop();
 138   1      }
 139          
 140          
 141          
 142          
 143          
 144          
 145          
 146          
 147          
 148          
 149          
 150          
 151          
 152          
 153          
 154          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    414    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      21
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
