C51 COMPILER V9.60.0.0   KEY                                                               03/13/2023 13:34:15 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN .\Objects\key.obj
COMPILER INVOKED BY: E:\keil5\keil5\C51\BIN\C51.EXE ..\Driver\key.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\User;..\System;..
                    -\Driver;..\Config) DEBUG OBJECTEXTEND PRINT(.\Listings\key.lst) OBJECT(.\Objects\key.obj)

line level    source

   1          
   2          #include "key.h"
   3          
   4          
   5          unsigned char code Key_Map[4][4] = {
   6                  {'0','1','2','3'},
   7                  {'4','5','6','7'},
   8                  {'8','9','S','R'},
   9                  {'#','*','Y','B'}
  10          };
  11          
  12          unsigned char Key_Sta[4][4] = {
  13                  {1,1,1,1},{1,1,1,1},{1,1,1,1},{1,1,1,1}
  14          };
  15          
  16          unsigned char Number_Code = 0;          //ËæìÂÖ•ÂØÜÁ†ÅÊó∂ÁöÑ‰ΩçÊï∞ÁºìÂ≠ò
  17          unsigned char Password_Mode = 0;   //ÂΩìÂâçËæìÂÖ•ÂØÜÁ†ÅÁöÑÁä∂ÊÄÅÔºå0‰∏∫ËæìÂÖ•ÂØÜÁ†ÅËß£ÈîÅÔºå1‰∏∫ËÆæÁΩÆÁïåÈ
             -ù¢ÁöÑËæìÂÖ•ÊóßÂØÜÁ†ÅÔºå2‰∏∫ËæìÂÖ•Êñ∞ÂØÜÁ†Å
  18          unsigned char Error_Cnt = 0;       //ÂØÜÁ†ÅËæìÂÖ•ÈîôËØØÁöÑÊ¨°Êï∞
  19          bit Password_Right = 0;           //Âà§Êñ≠ÂØÜÁ†ÅÊòØÂê¶Ê≠£Á°Æ
  20          bit Password_Over = 0;             //Âà§Êñ≠ÂΩìÂâçÂØÜÁ†ÅËæìÂÖ•ÊòØÂê¶ÂÆåÊàê
  21          
  22          
  23          void KeyAction0(unsigned char keycode)
  24          {       
  25   1              if(keycode == 'Y')
  26   1              {
  27   2                      if(Door_Mod == 1)
  28   2                      {
  29   3                              PasswordKeyMode();
  30   3                      }
  31   2              }
  32   1              else if(keycode == 'S')
  33   1              {
  34   2                      if(Door_Mod == 1)
  35   2                      {
  36   3                              if(Password_Mode == 0)
  37   3                              {
  38   4                                      Password_Right = 0;
  39   4                                      Password_Mode = 1;
  40   4                                      PasswordBuffReset();
  41   4                              }
  42   3                      }
  43   2              }
  44   1              else if(keycode == 'R')
  45   1              {
  46   2                      PasswordReset();
  47   2              }
  48   1              else if(keycode == 'B')
  49   1              {
  50   2                      if(Door_Mod == 1)
  51   2                      {
  52   3                              Password_Mode = 0;
  53   3                              PasswordBuffReset();
C51 COMPILER V9.60.0.0   KEY                                                               03/13/2023 13:34:15 PAGE 2   

  54   3                      }               
  55   2              }
  56   1              else
  57   1              {
  58   2                      if(Door_Mod == 1)
  59   2                      {
  60   3                              if(Number_Code <= 5)
  61   3                              {
  62   4                                      PassWordBuff[Number_Code++] = keycode - 0x30;
  63   4                              }
  64   3                              else
  65   3                              {
  66   4                                      Password_Over = 1;
  67   4                              }                       
  68   3                      }
  69   2              }       
  70   1      }
  71          
  72          void KeyAction1(unsigned char keycode)
  73          {
  74   1              if(keycode == '1')
  75   1              {
  76   2                      
  77   2              }
  78   1              
  79   1      }
  80          
  81          void PasswordKeyMode()
  82          {
  83   1              PasswordOver();
  84   1              if(Password_Mode == 0)
  85   1              {
  86   2                      PasswordCmd();
  87   2                      if(Password_Right == 1)
  88   2                      {
  89   3                              Door_Open = 1;
  90   3                              PasswordBuffReset();
  91   3                      }
  92   2              }
  93   1              else if(Password_Mode == 1)
  94   1              {
  95   2                      PasswordCmd();
  96   2                      if(Password_Right == 1)
  97   2                      {
  98   3                              Password_Mode = 2;
  99   3                              PasswordBuffReset();
 100   3                              Password_Right = 1;
 101   3                      }
 102   2              }
 103   1              else if(Password_Mode == 2)
 104   1              {
 105   2                      if(Password_Over == 1)
 106   2                      {
 107   3                              PasswordSet();
 108   3                              Password_Mode = 0;
 109   3                      }
 110   2              }       
 111   1      }
 112          
 113          void KeyDriver()
 114          {
 115   1              unsigned char i,j;
C51 COMPILER V9.60.0.0   KEY                                                               03/13/2023 13:34:15 PAGE 3   

 116   1              static unsigned char backup[4][4] = {
 117   1                      {1,1,1,1},{1,1,1,1},{1,1,1,1},{1,1,1,1}
 118   1              };
 119   1              
 120   1              for(i=0;i<4;i++)
 121   1              {
 122   2                      for(j=0;j<4;j++)
 123   2                      {
 124   3                              if(backup[i][j] != Key_Sta[i][j])
 125   3                              {
 126   4                                      if(backup[i][j] != 0)
 127   4                                      {
 128   5                                              KeyAction0(Key_Map[i][j]);
 129   5                                      }
 130   4                                      else
 131   4                                      {
 132   5                                              KeyAction1(Key_Map[i][j]);
 133   5                                      }
 134   4                                      backup[i][j] = Key_Sta[i][j];
 135   4                              }
 136   3                      }
 137   2              }
 138   1      }
 139          
 140          void KeyScan()
 141          {
 142   1              unsigned char i = 0;
 143   1              static unsigned char Key_Out = 0;
 144   1              static unsigned char Key_Buff[4][4] = {
 145   1                      {0xFF,0xFF,0xFF,0xFF},{0xFF,0xFF,0xFF,0xFF},
 146   1                      {0xFF,0xFF,0xFF,0xFF},{0xFF,0xFF,0xFF,0xFF}
 147   1              };
 148   1              
 149   1              Key_Buff[Key_Out][0] = Key_Buff[Key_Out][0] << 1 | KEY_IN_0;
 150   1              Key_Buff[Key_Out][1] = Key_Buff[Key_Out][1] << 1 | KEY_IN_1;
 151   1              Key_Buff[Key_Out][2] = Key_Buff[Key_Out][2] << 1 | KEY_IN_2;
 152   1              Key_Buff[Key_Out][3] = Key_Buff[Key_Out][3] << 1 | KEY_IN_3;
 153   1              
 154   1              for(i=0;i<4;i++)
 155   1              {
 156   2                      if((Key_Buff[Key_Out][i] & 0x0F) == 0x00)
 157   2                      {
 158   3                              Key_Sta[Key_Out][i] = 0;
 159   3                      }
 160   2                      else if((Key_Buff[Key_Out][i] & 0x0F) == 0x0F)
 161   2                      {
 162   3                              Key_Sta[Key_Out][i] = 1;
 163   3                      }
 164   2              }
 165   1              
 166   1              Key_Out++;
 167   1              if(Key_Out >= 4)
 168   1              {
 169   2                      Key_Out = 0;
 170   2              }
 171   1              
 172   1              switch(Key_Out)
 173   1              {
 174   2                      case 0: KEY_OUT_0 = 0; KEY_OUT_3 = 1; break;
 175   2                      case 1: KEY_OUT_1 = 0; KEY_OUT_0 = 1; break;
 176   2                      case 2: KEY_OUT_2 = 0; KEY_OUT_1 = 1; break;
 177   2                      case 3: KEY_OUT_3 = 0; KEY_OUT_2 = 1; break;
C51 COMPILER V9.60.0.0   KEY                                                               03/13/2023 13:34:15 PAGE 4   

 178   2                      default: break;
 179   2              }
 180   1              
 181   1      }
 182          
 183                  
 184          
 185          
 186          
 187          
 188          
 189          
 190          
 191          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    550    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     52       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
