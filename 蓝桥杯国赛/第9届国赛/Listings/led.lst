C51 COMPILER V9.60.0.0   LED                                                               06/04/2023 17:11:26 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LED
OBJECT MODULE PLACED IN .\Objects\led.obj
COMPILER INVOKED BY: E:\keil5\keil5\C51\BIN\C51.EXE Driver\led.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\User;.\Driver;.\Syste
                    -m;.\Config) DEBUG OBJECTEXTEND PRINT(.\Listings\led.lst) OBJECT(.\Objects\led.obj)

line level    source

   1          #include "led.h"
   2          
   3          
   4          
   5          code unsigned char Led_Number[] =
   6          {
   7                  0xc0, //0
   8                  0xf9, //1
   9                  0xa4, //2
  10                  0xb0, //3
  11                  0x99, //4
  12                  0x92, //5
  13                  0x82, //6
  14                  0xf8, //7
  15                  0x80, //8
  16                  0x90, //9
  17                  0xFF
  18          };
  19          
  20          
  21          
  22          unsigned char Led_Buff[8] = {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF};
  23          
  24          
  25          
  26          
  27          void LedDisplay()
  28          {
  29   1              P0 = 0xFF;
  30   1              HC138Set(4);
  31   1              
  32   1              if(MenuMode_Main == 0)
  33   1              {
  34   2                      if(MenuMode_Data == 0)
  35   2                      {
  36   3                              LED1 = 0;
  37   3                      }
  38   2                      else if(MenuMode_Data == 1)
  39   2                      {
  40   3                              LED2 = 0;
  41   3                      }
  42   2                      else if(MenuMode_Data == 2)
  43   2                      {
  44   3                              LED3 = 0;
  45   3                      }
  46   2              }
  47   1              
  48   1              LED8 = flag_Led8;
  49   1              
  50   1              HC138Set(0);
  51   1      }
  52          
  53          
  54          void SmgMenuMain()
C51 COMPILER V9.60.0.0   LED                                                               06/04/2023 17:11:26 PAGE 2   

  55          {
  56   1              if(MenuMode_Main == 0)
  57   1              {
  58   2                      if(MenuMode_Data == 0)
  59   2                      {
  60   3                              SmgMenuDataTemp();
  61   3                      }
  62   2                      else if(MenuMode_Data == 1)
  63   2                      {
  64   3                              SmgMenuDataADC();
  65   3                      }
  66   2                      else if(MenuMode_Data == 2)
  67   2                      {
  68   3                              SmgMenuDataFreq();
  69   3                      }
  70   2              }
  71   1              else if(MenuMode_Main == 1)
  72   1              {
  73   2                      SmgMenuBackupData();
  74   2              }
  75   1              else if(MenuMode_Main == 2)
  76   1              {
  77   2                      SmgMenuParmSet();
  78   2              }
  79   1      }
  80          
  81          void SmgMenuParmSet()
  82          {
  83   1              Led_Buff[0] = 0x8C;     
  84   1              Led_Buff[1] = Led_Number[10];   
  85   1              Led_Buff[2] = Led_Number[10];
  86   1              Led_Buff[3] = Led_Number[10];   
  87   1              Led_Buff[4] = Led_Number[10];
  88   1              Led_Buff[5] = Led_Number[10];
  89   1      
  90   1              Led_Buff[6] = Led_Number[(Parm_ADC_Buf/10)%10] & 0x7F;
  91   1              Led_Buff[7] = Led_Number[(Parm_ADC_Buf)%10];    
  92   1      }
  93          
  94          void SmgMenuBackupData()
  95          {
  96   1              Led_Buff[0] = 0x89;
  97   1              
  98   1              if(MenuMode_Backup == 0)
  99   1              {
 100   2                      Led_Buff[1] = 0xC6;     
 101   2                      Led_Buff[2] = Led_Number[10];
 102   2                      Led_Buff[3] = Led_Number[10];           
 103   2                      if(Temp_Data_EEPROM >= 1000)
 104   2                      {
 105   3                              Led_Buff[4] = Led_Number[(Temp_Data_EEPROM/1000)%10];           
 106   3                      }
 107   2                      else
 108   2                      {
 109   3                              Led_Buff[4] = Led_Number[10];           
 110   3                      }       
 111   2                      Led_Buff[5] = Led_Number[(Temp_Data_EEPROM/100)%10] & 0x7F;
 112   2                      Led_Buff[6] = Led_Number[(Temp_Data_EEPROM/10)%10];
 113   2                      Led_Buff[7] = Led_Number[(Temp_Data_EEPROM)%10];                
 114   2              }
 115   1              else if(MenuMode_Backup == 1)
 116   1              {
C51 COMPILER V9.60.0.0   LED                                                               06/04/2023 17:11:26 PAGE 3   

 117   2                      Led_Buff[1] = 0xC1;     
 118   2                      Led_Buff[2] = Led_Number[10];
 119   2                      Led_Buff[3] = Led_Number[10];   
 120   2                      Led_Buff[4] = Led_Number[10];
 121   2                      Led_Buff[5] = Led_Number[10];
 122   2      
 123   2                      Led_Buff[6] = Led_Number[(ADC_Data_EEPROM/10)%10] & 0x7F;
 124   2                      Led_Buff[7] = Led_Number[(ADC_Data_EEPROM)%10];         
 125   2              }
 126   1              else if(MenuMode_Backup == 2)
 127   1              {
 128   2                      Led_Buff[1] = 0x8E;             
 129   2                      if(Freq_Data_EEPROM >= 100000)
 130   2                      {
 131   3                              Led_Buff[2] = Led_Number[(Freq_Data_EEPROM/100000)%10];         
 132   3                      }
 133   2                      else
 134   2                      {
 135   3                              Led_Buff[2] = Led_Number[10];           
 136   3                      }
 137   2                      if(Freq_Data_EEPROM >= 10000)
 138   2                      {
 139   3                              Led_Buff[3] = Led_Number[(Freq_Data_EEPROM/10000)%10];          
 140   3                      }
 141   2                      else
 142   2                      {
 143   3                              Led_Buff[3] = Led_Number[10];           
 144   3                      }
 145   2                      if(Freq_Data_EEPROM >= 1000)
 146   2                      {
 147   3                              Led_Buff[4] = Led_Number[(Freq_Data_EEPROM/1000)%10];           
 148   3                      }
 149   2                      else
 150   2                      {
 151   3                              Led_Buff[4] = Led_Number[10];           
 152   3                      }
 153   2                      if(Freq_Data_EEPROM >= 100)
 154   2                      {
 155   3                              Led_Buff[5] = Led_Number[(Freq_Data_EEPROM/100)%10];            
 156   3                      }
 157   2                      else
 158   2                      {
 159   3                              Led_Buff[5] = Led_Number[10];           
 160   3                      }
 161   2                      if(Freq_Data_EEPROM >= 10)
 162   2                      {
 163   3                              Led_Buff[6] = Led_Number[(Freq_Data_EEPROM/10)%10];             
 164   3                      }
 165   2                      else
 166   2                      {
 167   3                              Led_Buff[6] = Led_Number[10];           
 168   3                      }
 169   2                      Led_Buff[7] = Led_Number[(Freq_Data_EEPROM)%10];                        
 170   2              }
 171   1      }
 172          
 173          void SmgMenuDataADC()
 174          {
 175   1              Led_Buff[0] = 0xC1;     
 176   1              Led_Buff[1] = Led_Number[10];
 177   1              Led_Buff[2] = Led_Number[10];
 178   1              Led_Buff[3] = Led_Number[10];   
C51 COMPILER V9.60.0.0   LED                                                               06/04/2023 17:11:26 PAGE 4   

 179   1              Led_Buff[4] = Led_Number[10];
 180   1              Led_Buff[5] = Led_Number[10];
 181   1      
 182   1              Led_Buff[6] = Led_Number[(ADC_Data/10)%10] & 0x7F;
 183   1              Led_Buff[7] = Led_Number[(ADC_Data)%10];
 184   1      }
 185          
 186          void SmgMenuDataTemp()
 187          {
 188   1              Led_Buff[0] = 0xC6;     
 189   1              Led_Buff[1] = Led_Number[10];
 190   1              Led_Buff[2] = Led_Number[10];
 191   1              Led_Buff[3] = Led_Number[10];   
 192   1              if(Temp_Data >= 1000)
 193   1              {
 194   2                      Led_Buff[4] = Led_Number[(Temp_Data/1000)%10];          
 195   2              }
 196   1              else
 197   1              {
 198   2                      Led_Buff[4] = Led_Number[10];           
 199   2              }       
 200   1              Led_Buff[5] = Led_Number[(Temp_Data/100)%10] & 0x7F;
 201   1              Led_Buff[6] = Led_Number[(Temp_Data/10)%10];
 202   1              Led_Buff[7] = Led_Number[(Temp_Data)%10];
 203   1      }
 204          
 205          void SmgMenuDataFreq()
 206          {
 207   1              Led_Buff[0] = 0x8E;     
 208   1              Led_Buff[1] = Led_Number[10];   
 209   1              
 210   1              if(Freq_Data >= 100000)
 211   1              {
 212   2                      Led_Buff[2] = Led_Number[(Freq_Data/100000)%10];                
 213   2              }
 214   1              else
 215   1              {
 216   2                      Led_Buff[2] = Led_Number[10];           
 217   2              }
 218   1              if(Freq_Data >= 10000)
 219   1              {
 220   2                      Led_Buff[3] = Led_Number[(Freq_Data/10000)%10];         
 221   2              }
 222   1              else
 223   1              {
 224   2                      Led_Buff[3] = Led_Number[10];           
 225   2              }
 226   1              if(Freq_Data >= 1000)
 227   1              {
 228   2                      Led_Buff[4] = Led_Number[(Freq_Data/1000)%10];          
 229   2              }
 230   1              else
 231   1              {
 232   2                      Led_Buff[4] = Led_Number[10];           
 233   2              }
 234   1              if(Freq_Data >= 100)
 235   1              {
 236   2                      Led_Buff[5] = Led_Number[(Freq_Data/100)%10];           
 237   2              }
 238   1              else
 239   1              {
 240   2                      Led_Buff[5] = Led_Number[10];           
C51 COMPILER V9.60.0.0   LED                                                               06/04/2023 17:11:26 PAGE 5   

 241   2              }
 242   1              if(Freq_Data >= 10)
 243   1              {
 244   2                      Led_Buff[6] = Led_Number[(Freq_Data/10)%10];            
 245   2              }
 246   1              else
 247   1              {
 248   2                      Led_Buff[6] = Led_Number[10];           
 249   2              }
 250   1              Led_Buff[7] = Led_Number[(Freq_Data)%10];               
 251   1      }
 252          
 253          
 254          
 255          
 256          void SmgDisplay()
 257          {
 258   1              static unsigned char i = 0;
 259   1              
 260   1              HC138Set(7);
 261   1              P0 = 0xFF;
 262   1              HC138Set(6);
 263   1              P0 = 0x01 << i;
 264   1              HC138Set(7);
 265   1              P0 = 0xFF;
 266   1              P0 = Led_Buff[i];
 267   1              HC138Set(0);
 268   1              
 269   1              i++;
 270   1              i &= 0x07;      
 271   1      }
 272          
 273          
 274          
 275          
 276          
 277          
 278          
 279          
 280          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1178    ----
   CONSTANT SIZE    =     11    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
