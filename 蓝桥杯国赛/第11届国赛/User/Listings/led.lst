C51 COMPILER V9.60.0.0   LED                                                               03/09/2023 20:52:45 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LED
OBJECT MODULE PLACED IN .\Objects\led.obj
COMPILER INVOKED BY: E:\keil5\keil5\C51\BIN\C51.EXE ..\Driver\led.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\User;..\System;..
                    -\Driver;..\Config) DEBUG OBJECTEXTEND PRINT(.\Listings\led.lst) OBJECT(.\Objects\led.obj)

line level    source

   1          #include "led.h"
   2          
   3          
   4          
   5          unsigned char code Led_Number[] = {
   6                  0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0x80,0x90,0xFF
   7          };
   8          
   9          unsigned char Led_Buff[] = {
  10                  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  11          };
  12          
  13          bit Smg_Show_Mode = 0;                                  //显示模式切换
  14          unsigned char Smg_Data_Mode = 0;                        //数据显示模式下，显示数据切换
  15          unsigned char Smg_Parm_Mode = 0;             //参数显示模式下，参数类型显示切换
  16          
  17          unsigned char Timer_Parm = 17;
  18          unsigned int Temp_Parm = 25;
  19          unsigned char Led_Parm = 4;
  20          
  21          
  22          void LedDisplay()
  23          {
  24   1              P0 = 0xFF;
  25   1              
  26   1              if(flagLed1 == 1)
  27   1              {
  28   2                      LED0 = 0;
  29   2              }
  30   1              if(TempData < (Temp_Parm*10))
  31   1              {
  32   2                      LED1 = 0;
  33   2              }
  34   1              if(Light_Dark == 1)
  35   1              {
  36   2                      if(flag3S >= 30)
  37   2                      {
  38   3                              LED2 = 0;
  39   3                      }
  40   2                      switch(Led_Parm)
  41   2                      {
  42   3                              case 4: LED3 = 0;break;
  43   3                              case 5: LED4 = 0;break;
  44   3                              case 6: LED5 = 0;break;
  45   3                              case 7: LED6 = 0;break;
  46   3                              case 8: LED7 = 0;break;
  47   3                              default: break;
  48   3                      }
  49   2              }
  50   1              HC138(4);
  51   1              HC138(0);       
  52   1      }
  53          
  54          void SmgShowDriver()
C51 COMPILER V9.60.0.0   LED                                                               03/09/2023 20:52:45 PAGE 2   

  55          {
  56   1              if(Smg_Show_Mode == 0)
  57   1              {
  58   2                      SmgDataSelect();
  59   2              }
  60   1              else
  61   1              {
  62   2                      SmgParmSelect();
  63   2              }
  64   1      }
  65          
  66          void SmgDataSelect()
  67          {
  68   1              if(Smg_Data_Mode == 0)
  69   1              {
  70   2                      SmgDs1302Time();
  71   2              }
  72   1              else if(Smg_Data_Mode == 1)
  73   1              {
  74   2                      SmgDS18B20Temp();
  75   2              }
  76   1              else if(Smg_Data_Mode == 2)
  77   1              {
  78   2                      SmgLightDark();
  79   2              }
  80   1      }
  81          
  82          void SmgParmSelect()
  83          {
  84   1              if(Smg_Parm_Mode == 0)
  85   1              {
  86   2                      SmgTimerParm();
  87   2              }
  88   1              else if(Smg_Parm_Mode == 1)
  89   1              {
  90   2                      SmgTempParm();
  91   2              }
  92   1              else if(Smg_Parm_Mode == 2)
  93   1              {
  94   2                      SmgLedParm();
  95   2              }       
  96   1      }
  97          
  98          
  99          void SmgDs1302Time()
 100          {
 101   1              Led_Buff[0] = Led_Number[TimerData[2]>>4];
 102   1              Led_Buff[1] = Led_Number[TimerData[2]&0x0F];
 103   1              
 104   1              Led_Buff[2] = 0xBF;
 105   1              
 106   1              Led_Buff[3] = Led_Number[TimerData[1]>>4];
 107   1              Led_Buff[4] = Led_Number[TimerData[1]&0x0F];
 108   1              
 109   1              Led_Buff[5] = 0xBF;
 110   1              
 111   1              Led_Buff[6] = Led_Number[TimerData[0]>>4];
 112   1              Led_Buff[7] = Led_Number[TimerData[0]&0x0F];    
 113   1      }
 114          
 115          void SmgDS18B20Temp()
 116          {
C51 COMPILER V9.60.0.0   LED                                                               03/09/2023 20:52:45 PAGE 3   

 117   1              Led_Buff[0] = 0xC6;
 118   1              
 119   1              Led_Buff[1] = Led_Number[10];   
 120   1              Led_Buff[2] = Led_Number[10];   
 121   1              Led_Buff[3] = Led_Number[10];
 122   1              Led_Buff[4] = Led_Number[10];
 123   1              
 124   1              Led_Buff[5] = Led_Number[(TempData/100)%10];    
 125   1              Led_Buff[6] = Led_Number[(TempData/10)%10] & 0x7F;
 126   1              Led_Buff[7] = Led_Number[TempData%10];  
 127   1      }
 128          
 129          void SmgLightDark()
 130          {
 131   1              Led_Buff[0] = 0x86;
 132   1              
 133   1              Led_Buff[1] = Led_Number[10];
 134   1              
 135   1              Led_Buff[2] = Led_Number[(RD1_Vin/100)%10] & 0x7F;      
 136   1              Led_Buff[3] = Led_Number[(RD1_Vin/10)%10];
 137   1              Led_Buff[4] = Led_Number[RD1_Vin%10];
 138   1              
 139   1              Led_Buff[5] = Led_Number[10];   
 140   1              Led_Buff[6] = Led_Number[10];
 141   1              
 142   1              if(Light_Dark == 0)
 143   1              {
 144   2                      Led_Buff[7] = Led_Number[0];    
 145   2              }
 146   1              else
 147   1              {
 148   2                      Led_Buff[7] = Led_Number[1];
 149   2              }
 150   1      }
 151          
 152          
 153          void SmgTimerParm()
 154          {
 155   1              Led_Buff[0] = 0x8C;
 156   1              Led_Buff[1] = Led_Number[1];
 157   1              
 158   1              Led_Buff[2] = Led_Number[10];   
 159   1              Led_Buff[3] = Led_Number[10];   
 160   1              Led_Buff[4] = Led_Number[10];
 161   1              Led_Buff[5] = Led_Number[10];
 162   1              
 163   1              if(Smg_Show_Mode == 0)
 164   1              {
 165   2                      Led_Buff[6] = Led_Number[(Timer_Parm/10)%10];
 166   2                      Led_Buff[7] = Led_Number[Timer_Parm%10];
 167   2              }
 168   1              else
 169   1              {
 170   2                      Led_Buff[6] = Led_Number[(Parm_Buff/10)%10];
 171   2                      Led_Buff[7] = Led_Number[Parm_Buff%10];         
 172   2              }       
 173   1      }
 174          
 175          void SmgTempParm()
 176          {
 177   1              Led_Buff[0] = 0x8C;
 178   1              Led_Buff[1] = Led_Number[2];
C51 COMPILER V9.60.0.0   LED                                                               03/09/2023 20:52:45 PAGE 4   

 179   1              
 180   1              Led_Buff[2] = Led_Number[10];   
 181   1              Led_Buff[3] = Led_Number[10];   
 182   1              Led_Buff[4] = Led_Number[10];
 183   1              Led_Buff[5] = Led_Number[10];
 184   1              
 185   1              if(Smg_Show_Mode == 0)
 186   1              {
 187   2                      Led_Buff[6] = Led_Number[(Temp_Parm/10)%10];
 188   2                      Led_Buff[7] = Led_Number[Temp_Parm%10];         
 189   2              }
 190   1              else
 191   1              {
 192   2                      Led_Buff[6] = Led_Number[(Parm_Buff/10)%10];
 193   2                      Led_Buff[7] = Led_Number[Parm_Buff%10];                 
 194   2              }
 195   1      }
 196          
 197          void SmgLedParm()
 198          {
 199   1              Led_Buff[0] = 0x8C;
 200   1              Led_Buff[1] = Led_Number[3];
 201   1              
 202   1              Led_Buff[2] = Led_Number[10];   
 203   1              Led_Buff[3] = Led_Number[10];   
 204   1              Led_Buff[4] = Led_Number[10];
 205   1              Led_Buff[5] = Led_Number[10];
 206   1              Led_Buff[6] = Led_Number[10];
 207   1              
 208   1              if(Smg_Show_Mode == 0)
 209   1              {
 210   2                      Led_Buff[7] = Led_Number[Led_Parm%10];          
 211   2              }
 212   1              else
 213   1              {
 214   2                      Led_Buff[7] = Led_Number[Parm_Buff%10];
 215   2              }
 216   1      }
 217          
 218          
 219          void SmgDisplay()
 220          {
 221   1              static unsigned char i = 0;
 222   1              
 223   1              P0 = 0xFF;
 224   1              HC138(7);
 225   1              P0 = Led_Buff[i];
 226   1              HC138(0);
 227   1              
 228   1              P0 = 0x00;
 229   1              HC138(6);
 230   1              P0 = 0x01 << i;
 231   1              HC138(0);
 232   1              
 233   1              i++;
 234   1              if(i > 7)
 235   1              {
 236   2                      i = 0;
 237   2              }       
 238   1      }
 239          
 240          
C51 COMPILER V9.60.0.0   LED                                                               03/09/2023 20:52:45 PAGE 5   

 241          
 242          
 243          
 244          
 245          
 246          
 247          
 248          
 249          
 250          
 251          
 252          
 253          
 254          
 255          
 256          
 257          
 258          
 259          
 260          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    748    ----
   CONSTANT SIZE    =     11    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     15    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
