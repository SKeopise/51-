C51 COMPILER V9.60.0.0   LED                                                               06/05/2023 12:20:55 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LED
OBJECT MODULE PLACED IN .\Objects\led.obj
COMPILER INVOKED BY: E:\keil5\keil5\C51\BIN\C51.EXE Driver\led.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\User;.\Driver;.\Syste
                    -m;.\Config) DEBUG OBJECTEXTEND PRINT(.\Listings\led.lst) OBJECT(.\Objects\led.obj)

line level    source

   1          
   2          #include "led.h"
   3          
   4          
   5          
   6          
   7          code unsigned char Led_Number[] =
   8          {
   9                  0xc0, //0
  10                  0xf9, //1
  11                  0xa4, //2
  12                  0xb0, //3
  13                  0x99, //4
  14                  0x92, //5
  15                  0x82, //6
  16                  0xf8, //7
  17                  0x80, //8
  18                  0x90, //9
  19                  0xFF
  20          };
  21          
  22          unsigned char Led_Buff[8] = {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF};
  23          
  24          
  25          
  26          bit flag_Pwm_Output = 0;
  27          
  28          
  29          
  30          
  31          
  32          
  33          void SmgMenuMain()
  34          {
  35   1              if(Menu_Mode == 0)
  36   1              {
  37   2                      SmgMenuFreq();
  38   2              }
  39   1              else if(Menu_Mode == 1)
  40   1              {
  41   2                      SmgMenuRH();
  42   2              }
  43   1              else if(Menu_Mode == 2)
  44   1              {
  45   2                      SmgMenuDistence();
  46   2              }
  47   1              else if(Menu_Mode == 3)
  48   1              {
  49   2                      SmgMenuParm();
  50   2              }
  51   1      }
  52          
  53          void LedDisplay()
  54          {
C51 COMPILER V9.60.0.0   LED                                                               06/05/2023 12:20:55 PAGE 2   

  55   1              P0 = 0xFF;      
  56   1              if(Menu_Mode == 0)
  57   1              {
  58   2                      LED1 = 0;
  59   2              }
  60   1              else if(Menu_Mode == 1)
  61   1              {
  62   2                      LED2 = 0;
  63   2              }
  64   1              else if(Menu_Mode == 2)
  65   1              {
  66   2                      LED3 = 0;
  67   2              }
  68   1              else if(Menu_Mode == 3)
  69   1              {
  70   2                      if(Menu_Parm == 0)
  71   2                      {
  72   3                              LED1 = flag_Led_Flash;
  73   3                      }
  74   2                      else if(Menu_Parm == 1)
  75   2                      {
  76   3                              LED2 = flag_Led_Flash;
  77   3                      }
  78   2                      else if(Menu_Parm == 2)
  79   2                      {
  80   3                              LED3 = flag_Led_Flash;
  81   3                      }               
  82   2              }
  83   1              
  84   1              if(NE555_Freq > Parm_Freq)
  85   1              {
  86   2                      LED4 = 0;
  87   2                      flag_Pwm_Output = 1;
  88   2              }
  89   1              else
  90   1              {
  91   2                      flag_Pwm_Output = 0;
  92   2              }
  93   1              if(RH_Data > Parm_RH)
  94   1              {
  95   2                      LED5 = 0;
  96   2              }
  97   1              if(Sonic_Data_Distence > Parm_Distence)
  98   1              {
  99   2                      LED6 = 0;
 100   2              }
 101   1              
 102   1              if(flag_Clear_RelayCnt == 1)
 103   1              {
 104   2                      LED8 = 0;
 105   2              }
 106   1              
 107   1              HC138Set(4);    
 108   1              HC138Set(0);
 109   1      }
 110          
 111          void SmgMenuParm()
 112          {
 113   1              SmgClear();
 114   1              Led_Buff[0] = 0x8C;
 115   1              if(Menu_Parm == 0)
 116   1              {
C51 COMPILER V9.60.0.0   LED                                                               06/05/2023 12:20:55 PAGE 3   

 117   2                      Led_Buff[1] = Led_Number[1]; 
 118   2                      
 119   2                      if(Parm_Freq_Buf >= 10000)
 120   2                      {
 121   3                              Led_Buff[5] = Led_Number[(Parm_Freq_Buf/10000)%10];
 122   3                      }
 123   2                      Led_Buff[6] = Led_Number[(Parm_Freq_Buf/1000)%10] & 0x7F;
 124   2                      Led_Buff[7] = Led_Number[(Parm_Freq_Buf/100)%10];
 125   2              }
 126   1              else if(Menu_Parm == 1)
 127   1              {
 128   2                      Led_Buff[1] = Led_Number[2];
 129   2                      Led_Buff[6] = Led_Number[(Parm_RH_Buf/10)%10];
 130   2                      Led_Buff[7] = Led_Number[(Parm_RH_Buf)%10];             
 131   2              }
 132   1              else if(Menu_Parm == 2)
 133   1              {
 134   2                      Led_Buff[1] = Led_Number[3];
 135   2                      Led_Buff[6] = Led_Number[(Parm_Distence_Buf/100)%10] & 0x7F;
 136   2                      Led_Buff[7] = Led_Number[(Parm_Distence_Buf/10)%10];                    
 137   2              }       
 138   1      }
 139          
 140          void SmgMenuDistence()
 141          {
 142   1              SmgClear();
 143   1              Led_Buff[0] = 0x88;     
 144   1              
 145   1              if(distence_mode == 0)
 146   1              {
 147   2                      if(Sonic_Data_Distence >= 100)
 148   2                      {
 149   3                              Led_Buff[5] = Led_Number[(Sonic_Data_Distence/100)%10];                 
 150   3                      }
 151   2                      if(Sonic_Data_Distence >= 10)
 152   2                      {
 153   3                              Led_Buff[6] = Led_Number[(Sonic_Data_Distence/10)%10];                  
 154   3                      }
 155   2                      Led_Buff[7] = Led_Number[(Sonic_Data_Distence)%10];             
 156   2              }
 157   1              else
 158   1              {
 159   2                      Led_Buff[5] = Led_Number[(Sonic_Data_Distence/100)%10] & 0x7F;
 160   2                      Led_Buff[6] = Led_Number[(Sonic_Data_Distence/10)%10];
 161   2                      Led_Buff[7] = Led_Number[(Sonic_Data_Distence)%10];     
 162   2              }
 163   1      }
 164          
 165          
 166          void SmgMenuRH()
 167          {
 168   1              Led_Buff[0] = 0x89;
 169   1              Led_Buff[1] = 0xFF;
 170   1              Led_Buff[2] = 0xFF;
 171   1              Led_Buff[3] = 0xFF;
 172   1              Led_Buff[4] = 0xFF;
 173   1              Led_Buff[5] = 0xFF;
 174   1              
 175   1              Led_Buff[6] = Led_Number[(RH_Data/10)%10];
 176   1              Led_Buff[7] = Led_Number[(RH_Data)%10]; 
 177   1      }
 178          
C51 COMPILER V9.60.0.0   LED                                                               06/05/2023 12:20:55 PAGE 4   

 179          void SmgMenuFreq()
 180          {
 181   1              SmgClear();
 182   1              Led_Buff[0] = 0x8E;
 183   1              
 184   1              if(freq_mode == 0)
 185   1              {
 186   2                      if(NE555_Freq >= 100000)
 187   2                      {
 188   3                              Led_Buff[2] = Led_Number[(NE555_Freq/100000)%10];                       
 189   3                      }
 190   2                      if(NE555_Freq >= 10000)
 191   2                      {
 192   3                              Led_Buff[3] = Led_Number[(NE555_Freq/10000)%10];                        
 193   3                      }
 194   2                      if(NE555_Freq >= 1000)
 195   2                      {
 196   3                              Led_Buff[4] = Led_Number[(NE555_Freq/1000)%10];                 
 197   3                      }       
 198   2                      if(NE555_Freq >= 100)
 199   2                      {
 200   3                              Led_Buff[5] = Led_Number[(NE555_Freq/100)%10];                  
 201   3                      }       
 202   2                      if(NE555_Freq >= 10)
 203   2                      {
 204   3                              Led_Buff[6] = Led_Number[(NE555_Freq/10)%10];                   
 205   3                      }       
 206   2                      Led_Buff[7] = Led_Number[(NE555_Freq)%10];                              
 207   2              }
 208   1              else
 209   1              {
 210   2                      if(NE555_Freq >= 100000)
 211   2                      {
 212   3                              Led_Buff[4] = Led_Number[(NE555_Freq/100000)%10];                       
 213   3                      }
 214   2                      if(NE555_Freq >= 10000)
 215   2                      {
 216   3                              Led_Buff[5] = Led_Number[(NE555_Freq/10000)%10];                        
 217   3                      }
 218   2                      Led_Buff[6] = Led_Number[(NE555_Freq/1000)%10] & 0x7F;                  
 219   2                      Led_Buff[7] = Led_Number[(NE555_Freq/100)%10];                          
 220   2              }
 221   1      }
 222          
 223          
 224          void SmgClear()
 225          {
 226   1              Led_Buff[0] = 0xFF;
 227   1              Led_Buff[1] = 0xFF;
 228   1              Led_Buff[2] = 0xFF;
 229   1              Led_Buff[3] = 0xFF;
 230   1              Led_Buff[4] = 0xFF;
 231   1              Led_Buff[5] = 0xFF;
 232   1              Led_Buff[6] = 0xFF;     
 233   1              Led_Buff[7] = 0xFF;     
 234   1      }
 235          
 236          
 237          void SmgDisplay()
 238          {
 239   1              static unsigned char i = 0;
 240   1      
C51 COMPILER V9.60.0.0   LED                                                               06/05/2023 12:20:55 PAGE 5   

 241   1              P0 = 0xFF;      
 242   1              HC138Set(7);
 243   1              HC138Set(0);
 244   1              
 245   1              P0 = 0x00;
 246   1              P0 = 0x01 << i;
 247   1              HC138Set(6);
 248   1              HC138Set(0);
 249   1              
 250   1              P0 = 0xFF;
 251   1              P0 = Led_Buff[i];       
 252   1              HC138Set(7);
 253   1              HC138Set(0);
 254   1              
 255   1              i++;
 256   1              i &= 0x07;      
 257   1      }
 258          
 259          
 260          
 261          
 262          
 263          
 264          
 265          
 266          
 267          
 268          
 269          
 270          
 271          
 272          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1118    ----
   CONSTANT SIZE    =     11    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
